package com.controller;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;

import java.util.List;

import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.ui.Model;
import org.springframework.web.client.RestTemplate;

import com.service.BookingService;

@SpringBootTest
class BookingControllerTest {
	
	@Mock
	BookingService bs;
	
	@Mock
	RestTemplate rt;
	
	@InjectMocks
	BookingController bc;

	@Test
	void testWelcome() {
		assertEquals(bc.welcome(), "welcome");
	}

	@Test
	void testBookingForm() {
		Model m = null;
		Mockito.when(rt.getForObject("http://CABFARE/cabfare/cabTypes", List.class)).thenReturn(null);
		Mockito.when(rt.getForObject("http://CABFARE/cabfare/cabFares", List.class)).thenReturn(null);
		assertEquals(bc.bookingForm(m), "bookingForm");
	}

	@Test
	@Disabled
	void testPlaceBooking() {
		fail("Not yet implemented");
	}

	@Test
	@Disabled
	void testCalculateFare() {
		fail("Not yet implemented");
	}

	@Test
	@Disabled
	void testCalculateFarePost() {
		fail("Not yet implemented");
	}

	@Test
	@Disabled
	void testListBookings() {
		fail("Not yet implemented");
	}

	@Test
	@Disabled
	void testListBookingsPost() {
		fail("Not yet implemented");
	}

}
